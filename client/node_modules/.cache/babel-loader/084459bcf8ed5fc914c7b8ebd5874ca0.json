{"ast":null,"code":"var _jsxFileName = \"E:\\\\Documents\\\\Side Projects\\\\discord-oauth-react\\\\client\\\\src\\\\pages\\\\DashboardPage\\\\index.jsx\";\nimport React from \"react\";\nimport { getUserDetails } from \"../../utils/api\";\nexport function DashboardPage({\n  history\n}) {\n  //create user state variable, and setUser fucntion\n  const [user, setUser] = React.useState(null); //keeps track of the component -> if we're in loading screen or not\n\n  const [loading, setLoading] = React.useState(true); //makes the api call to get user data from mongodb\n\n  React.useEffect(() => {\n    getUserDetails().then(({\n      data\n    }) => {\n      console.log(data);\n      setUser(data); //update state var user\n\n      setLoading(false);\n    }).catch(err => {\n      history.push(\"/\"); //if user not logged in, redirect to main route\n\n      setLoading(false);\n    });\n  }, []); //if loading is true\n\n  return !loading && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, \"Dashboard Page\"));\n}","map":{"version":3,"sources":["E:/Documents/Side Projects/discord-oauth-react/client/src/pages/DashboardPage/index.jsx"],"names":["React","getUserDetails","DashboardPage","history","user","setUser","useState","loading","setLoading","useEffect","then","data","console","log","catch","err","push"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,iBAA/B;AAEA,OAAO,SAASC,aAAT,CAAuB;AAAEC,EAAAA;AAAF,CAAvB,EAAoC;AACzC;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,KAAK,CAACM,QAAN,CAAe,IAAf,CAAxB,CAFyC,CAGzC;;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,KAAK,CAACM,QAAN,CAAe,IAAf,CAA9B,CAJyC,CAMzC;;AACAN,EAAAA,KAAK,CAACS,SAAN,CAAgB,MAAM;AACpBR,IAAAA,cAAc,GACXS,IADH,CACQ,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAc;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAN,MAAAA,OAAO,CAACM,IAAD,CAAP,CAFkB,CAEH;;AACfH,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KALH,EAMGM,KANH,CAMUC,GAAD,IAAS;AACdZ,MAAAA,OAAO,CAACa,IAAR,CAAa,GAAb,EADc,CACK;;AACnBR,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KATH;AAUD,GAXD,EAWG,EAXH,EAPyC,CAmBzC;;AACA,SACE,CAACD,OAAD,iBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,CAFJ;AAOD","sourcesContent":["import React from \"react\";\r\nimport { getUserDetails } from \"../../utils/api\";\r\n\r\nexport function DashboardPage({ history }) {\r\n  //create user state variable, and setUser fucntion\r\n  const [user, setUser] = React.useState(null);\r\n  //keeps track of the component -> if we're in loading screen or not\r\n  const [loading, setLoading] = React.useState(true);\r\n\r\n  //makes the api call to get user data from mongodb\r\n  React.useEffect(() => {\r\n    getUserDetails()\r\n      .then(({ data }) => {\r\n        console.log(data);\r\n        setUser(data); //update state var user\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        history.push(\"/\"); //if user not logged in, redirect to main route\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n  //if loading is true\r\n  return (\r\n    !loading && (\r\n      <div>\r\n        <h1>Dashboard Page</h1>\r\n      </div>\r\n    )\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}